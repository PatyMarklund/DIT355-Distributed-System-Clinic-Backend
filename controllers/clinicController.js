var Clinic = require('../models/clinics.js');
const mongoose = require('mongoose');
const client = require('../mqttClient/');

class ClinicController{
    constructor(){
    }
    createClinics(message){
        for (let i = 0; i < message.dentists.length; i++){
            let owner = message.dentists[i].name.split(" ")
            const clinic = new Clinic({
                id: message.dentists[i].id,
                name: message.dentists[i].name,
                owner: {
                    firstName: owner[0],
                    lastName: owner[1],
                },
                dentists: message.dentists[i].dentists,
                address: message.dentists[i].address,
                coordinate: {
                    longitude: message.dentists[i].coordinate.longitude,
                    latitude: message.dentists[i].coordinate.latitude,
                },
                appointments: {
                    monday: {
                        start: message.dentists[i].openinghours.monday.split("-")[0].split(":")[0],
                        end: message.dentists[i].openinghours.monday.split("-")[1].split(":")[0],
                    },
                    tuesday: {
                        start: message.dentists[i].openinghours.tuesday.split("-")[0].split(":")[0],
                        end: message.dentists[i].openinghours.tuesday.split("-")[1].split(":")[0],
                    },
                    wednesday: {
                        start: message.dentists[i].openinghours.wednesday.split("-")[0].split(":")[0],
                        end: message.dentists[i].openinghours.wednesday.split("-")[1].split(":")[0],
                    },
                    thursday: {
                        start: message.dentists[i].openinghours.thursday.split("-")[0].split(":")[0],
                        end: message.dentists[i].openinghours.thursday.split("-")[1].split(":")[0],
                    },
                    friday: {
                        start: message.dentists[i].openinghours.friday.split("-")[0].split(":")[0],
                        end: message.dentists[i].openinghours.friday.split("-")[1].split(":")[0],
                    },
                }
            })
            clinic.save(function (err, clinic){
                if (err) {
                    console.log("error " + err)
                    client.publish('clinic/created', "error " + err, {qos:2});
                } else {
                    console.log("clinic created")
                    client.publish('clinic/created', "clinic created", {qos:2})
                }
            })
        }
    }
    //this does not work at all
    //method to find the clinic by using the name. Need to decide which is the best way to find clinics
    findClinicByName(message){
        console.log('Finding clinic' + message)
        Clinic.find({name: message}, function(err, clinic){
            if (err) {
                console.log("clinic was not found")
                console.log("error " + err)
                client.publish('clinic/found', "error " + err, {qos:2});
            }
            if(message === null){
                console.log("clinic could not be found")
                client.publish('clinic/found', "Clinic could not be found", {qos:2})
            } else {
                console.log("clinic found")
                var clinicName = JSON.stringify(clinic)
                client.publish('clinic/found', clinicName, {qos:2})
                console.log(clinic)
            }
        })
    }

    //Find the clinic using the clinic ID variable in a clinic object.
    //Mind that the clinic ID is different from the ID generated by MongoDB.
    findClinicByID(message){
        console.log('Finding clinic by ID:' + message)
        try {
            Clinic.findOne({id : message}, function(err, clinic){
                if (clinic === null) {
                    console.log("clinic does not exist")
                    client.publish('frontend/search-clinic/id/reply', "Clinic could not be found", {qos:2})
                } else {
                    console.log("clinic found")
                    var clinicInfo = JSON.stringify(clinic)
                    client.publish('frontend/search-clinic/id/reply', clinicInfo, {qos:2})
                    console.log(clinic)
                }
            })
        } catch (err) {
            console.error(err);
        }
    }

    //Find all clinics from the database
    findAllClinics(){
        console.log('Finding all clinic')
        Clinic.find({}, function(err, clinic){
            if (err) {
                console.log("clinic was not found")
                console.log("error " + err)
                client.publish('clinics/get/all', "error " + err);
            }else {
                console.log("clinics founded")
                var allClinics = JSON.stringify(clinic)
                client.publish('clinics/get/all', allClinics, {qos:2})
                console.log(clinic)
            }
        })
    }
}

module.exports.ClinicController = ClinicController